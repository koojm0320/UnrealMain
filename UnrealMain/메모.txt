

- C++ 컴파일러의 특성 확인하기
	ㄴ 컴파일 실행을 하면 스택에 넣고 힙에 할당했다가 빼면서 오류를 검사

- 핫리로드

▶ 면접 질문
- 인터프리터


=================================================================

언리얼 포폴 (개인)

1. 모작
ㄴ 언팩 + 약간의 지갑 (Map, VFX, 파티클 등에서 써야할 것)

2. 지갑전사
ㄴ 돈만 있으면 됨

3. 줍줍이
ㄴ 무료 에셋만 쓰는 경우 (권장 X, 퀄리티 많이 떨어짐)

개인 포폴에 사용한 에셋은 팀 포폴에 사용하지 말 것

언팩
ㄴ Unreal	-> UE Viewer -> 기본적으로 게임을 구매해야 함, 설치 파일 -> UAssets -> Content
ㄴ Unity		-> Asset Studio
ㄴ 범용		-> Game Extractor
ㄴ 자체		-> 검색해서 패킹툴이 있는 지 확인

뜯는 건 크게 문제가 없음, 분류하는 데 시간이 오래 걸림

추천 / 비추천
추천
- 장르는 깔고 가면서 + 특이점
- 데드 스페이스
- 디비전
- 총질 + 칼질
- 싱글 (1인칭 or 3인칭)
- 객체가 많이 나오면 좋음 (짜잘하거나 큰놈)



비추천
- 장르에 충실한 게임들
- 사이드뷰 / 탑뷰 -> 구현난이도 ↑
- 창작 X
- 2D베이스 X
- 오픈월드 (팀 프로젝트는 가능)
- 템포가 빠른 액션 게임
- 빌더류 (알고리즘 덩어리들, 관리 요소가 있는 게임들)
- 대전
- 멀티 중심의 게임
- 턴제 (잘만 만든다면 황금포폴, 작업량이 많아 빡셈)

DX 11 파이프라인
- Input Assembler
ㄴ 정점(Vertax)나 인덱스 등의 입력 데이터를 GPU에 전달

- Vertax Shader
ㄴ 정점 위치 계산, 월드 / 뷰 / 프로젝션 변환 등 수행

- Hull Shader
ㄴ 테셀레이션을 위한 준비
- Tessellator
- Domain Shader
- Geometry Shader
- Rasterizer
- Pixel Shader
- Output Merger

* 면접 팁 *
- 아는 질문 나왔을 때는 자신있게
- 모르는 질문이 나왔을 때는 최대한 잘 얼버무리기
- 면접에서 물어본 질문은 한번쯤은 사용해보거나 본 개념이기 때문에 준비 잘 하기

- 0804 -

블루프린트 
Construction Script

BP에서 함수 안에 반복문을 실행하는 행위
ㄴ 문제는 없음, 1번에 한해서
ㄴ 반복문 중첩이 들어가면 코드(핀)가 굉장히 난잡해짐

삼각함수 잘 물어봄.

스마트 포인터
- 일반적으로 동적 메모리 할당을 하면 프로그래머가 직접 해제해줘야 하는데 스마트 포인터는 포인터가 가리키는 메모리를 자동으로 할당 해제해 주는 역할을 한다.
- 쓰는 이유: 
- 종류
ㄴ unique_ptr : 메모리의 소유권을 한개만 가지는 특징
ㄴ shared_ptr : 메모리의 소유권을 공유하는 특징
ㄴ weak_ptr	  : shared_ptr에서 순환 참조를 방지하기 위한 스마트 포인터


STL 펑터 VS 일반적인 Native C++ Funtion