====================================================================================================
										- 코딩인터뷰 -
====================================================================================================

- 1일차 코딩인터뷰 -

01. 입사 동기 -> 왜 널 뽑아야 하는지? -> 어필?
ㄴ 사회적으로 - 팀원과의 협업, 기술적으로 - 어떤 기술을 사용할 수 있는지, 이걸 얼마나 활용할 수 있는지

저는 제 실력을 기반으로 회사와 팀에 기여하고, 지속적으로 성장하는 개발자가 되고 싶습니다.
저는 C++에서 포인터나 메모리 관리, STL 등 기초를 익혔고 이를 C++프로젝트에 적용시킨 바가 있습니다.
또한 문제가 발생했을 때 혼자 해결하려는 것보다, 팀원과 공유하고 함께 개선해 나가는 과정을 중요하게 생각합니다.


02. 성격의 장단점?
ㄴ 단점을 설명할 때 중의적 표현을 사용할 것

먼저 저는 저의 의견을 어필하는 능력이 살짝 부족하다고 생각합니다.
하지만 그만큼 상대방의 의견을 적극적으로 수렴하고 반영하는 능력이 있다고 생각하며,
이런 저의 성격이 팀 활동에서의 강점으로 다가올 것이라고 생각합니다.

03. 야근 여부와 의지?
ㄴ 긍정적인 의지를 보여줄 것

일을 하다보면 추가 근무는 불가피하다는 것을 잘 알고 있습니다.
추가 근무가 필요하다면 기꺼이 수행할 의지가 있습니다.


04. 객체지향 4대특징에 대해 설명해 보시오.
ㄴ C++언어는 객체지향 언어
ㄴ 캡슐화, 상속, 다형성, 추상화 - 설명할 때 부가설명을 할 것

먼저 캡슐화를 말씀드리자면 데이터와 그 데이터를 다루는 함수를 하나의 객체로 묶고,
외부에서는 인터페이스만 공개하는 개념입니다.
대표적으로 public, private, protected 같은 접근 지정자가 있습니다.
캡슐화를 사용하게 되면 유지보수성이 향상된다는 장점을 가지고 있습니다.
그 다음은 상속입니다.
상속은 기존에 있던 클래스를 기반으로 새로운 클래스를 만들어 자식과 부모의 관계를 형성하는 것입니다.
그 다음으로는 다형성인데요,
같은 인터페이스나 함수를 여러 형태의 동작을 할 수 있도록 만드는 개념입니다.
마지막으로는 추상화 입니다.
불필요한 세부 정보를 숨기고 필요한 기능을 외부에 제공하는 개념입니다.


05. 객체지향 5대 설계 원칙?
ㄴ S(단일 책임 원칙) O(개방 폐쇄 원칙) L(리스코프 치환의 법칙) I(인터페이스 분리의 원칙) D(의존관계 역전의 법칙) 

06. 컴퓨터를 구성하고 있는 하드웨어의 특징에 대해 설명하시오.
ㄴ CPU(기본 연산 처리 장치), GPU(그래픽 연산 처리 장치), RAM(휘발성 메모리 -> hdd, ssd에 저장)

07. 라이브러리와 프레임워크의 차이에 대해 알고 있는지?
ㄴ 정적 라이브러리(#include), 동적 라이브러리(#pragma ...)
ㄴ 프레임워크
ㄴ 관리의 주체의 차이점이 있다. 라는 것을 얘기하면 됨 (Stdafx, #include)

====================================================================================================

- 2일차 코딩인터뷰 -

08. 외국어 할 줄 아냐?
ㄴ 중의적으로 표현할 것, 할 수 있는 정도를 말하고 이걸 업무과 관련해서 대답을 마무리 지을 것.

09. 본인의 타입은 어떤 타입인가? 예시로 리더 / 부하 / 참모
ㄴ 그냥 평범하게 얘기해도 되지만 나의 성격이 반영된 신박한 이야기를 하는 것도 좋음

10. 현재 읽고 있는 전공책 있는지?
ㄴ 무턱대고 없다고 하지 말기. C/C++, 그래픽스DX, DP, 자료구조. 알고리즘, OS, 서버 에 대한 관련 책
ㄴ Effective C++, 그래픽스(용책(9), 해골책(10), 물방울책(11), 노을책(12)), OS(공룡책)

11. C/C++ 차이점에 대해
ㄴ 저수준 절차지향, 고수준 객체지향, 컴파일러의 존재 유무
ㄴ 제네릭 프로그래밍 가능 여부, 개발 기간 단축

12. C++ 왜 배워야 하는지?
ㄴ 다른 언어와의 차이점: 포인터(직접 메모리에 접근 가능 -> 최적화 가능), 객체지향
ㄴ 언리얼이 C++을 사용하기 때문에 -> 좋은 답변 X

====================================================================================================

 - 3일차 코딩인터뷰 -

====================================================================================================

- 4일차 코딩인터뷰 -


 13. 모두 퇴근하고 혼자 남았을 때 문제점을 발견했다. -> 어떻게 해결할 것인지?
 ㄴ 혼자 해보려고 한다 -> X, 다음 날 -> X
 ㄴ 라이브 서버를 관리하는 회사인 경우 문제가 발견한 시간 동안 손해가 발생하기 떄문에 어떤 시간일지라도 연락하는 것이 좋음

 14. 학원 출결 / 집과의 거리 / 성실 관련 사례가 있다면 ?
 ㄴ 집과의 거리: 자택과 학원의 거리 차이를 답하고 그 사이의 시간을 활용하여 프로그래밍 공부를 했다 ... 등등

 15. 자료구조와 알고리즘에 대해 간략하게 설명해 보시오.
 ㄴ 자료구조: 데이터를 담고 있는 컨테이너  /  알고리즘: 비보호 관련된 키워드 ..

 16. A* 알고리즘 알고 있는지? ( -> 다이스트라) (Native)
 ㄴ A* 알고리즘 : f(x) = g(x) + h(x)
 ㄴ g(x) : 현재 상태 비용
 ㄴ h(x) : 다음 상태로 이동할 때의 휴리스틱(추정 비용)
 ㄴ 최소 비용으로 목표지점을 찾는다.

 17. Byte Odering 알고 있는지? (OS 질문)
 ㄴ Byte 에 대한 명령을 수행하겠다 -> 정렬
 ㄴ Big / Little
 ㄴ Big 엔디언 : 가장 낮은 주소에 저장하는 방식		(음수 주소에 대한 정렬 속도가 빠름)
 ㄴ Little 엔디언 : 가장 높은 주소에 저장하는 방식	(넢은 주소에 대한 정렬 속도가 빠름)
 ㄴ ctrl + F5 컴파일, Unreal Play 버튼 같은 데에서 이미 사용하고 있었음

 ====================================================================================================