==================================================
- 코딩인터뷰 -

- 1일차

01. 입사 동기 -> 왜 널 뽑아야 하는지? -> 어필?
ㄴ 사회적으로 - 팀원과의 협업, 기술적으로 - 어떤 기술을 사용할 수 있는지, 이걸 얼마나 활용할 수 있는지

저는 제 실력을 기반으로 회사와 팀에 기여하고, 지속적으로 성장하는 개발자가 되고 싶습니다.
저는 C++에서 포인터나 메모리 관리, STL 등 기초를 익혔고 이를 C++프로젝트에 적용시킨 바가 있습니다.
또한 문제가 발생했을 때 혼자 해결하려는 것보다, 팀원과 공유하고 함께 개선해 나가는 과정을 중요하게 생각합니다.



02. 성격의 장단점?
ㄴ 단점을 설명할 때 중의적 표현을 사용할 것

먼저 저는 저의 의견을 어필하는 능력이 살짝 부족하다고 생각합니다.
하지만 그만큼 상대방의 의견을 적극적으로 수렴하거나 수용하는 능력이 있고,
이게 저의 강점으로 다가올 것이라고 생각합니다.

03. 야근 여부와 의지?
ㄴ 긍정적인 의지를 보여줄 것

일을 하다보면 추가 근무는 불가피하다는 것을 잘 알고 있습니다.
추가 근무가 필요하다면 기꺼이 수행할 의지가 있습니다.

04. 객체지향 4대특징에 대해 설명해 보시오.
ㄴ C++언어는 객체지향 언어
ㄴ 캡슐화, 상속, 다형성, 추상화 - 설명할 때 부가설명을 할 것

먼저 캡슐화를 말씀드리자면 데이터와 그 데이터를 다루는 함수를 하나의 객체로 묶고,
외부에서는 인터페이스만 공개하는 개념입니다.
대표적으로 public, private, protected 같은 접근 지정자가 있습니다.
캡슐화를 사용하게 되면 유지보수성이 향상된다는 장점을 가지고 있습니다.

그 다음은 상속입니다.
상속은 기존에 있던 클래스를 기반으로 새로운 클래스를 만들어 자식과 부모의 관계를 형성하는 것입니다.

그 다음으로는 다형성인데요,
같은 인터페이스나 함수를 여러 형태의 동작을 할 수 있도록 만드는 개념입니다.

마지막으로는 추상화 입니다.
불필요한 세부 정보를 숨기고 필요한 기능을 외부에 제공하는 개념입니다.

05. 객체지향 5대 설계 원칙?
ㄴ S(단일 책임 원칙) O(개방 폐쇄 원칙) L(리스코프 치환의 법칙) I(인터페이스 분리의 원칙) D(의존관계 역전의 법칙) 

06. 컴퓨터를 구성하고 있는 하드웨어의 특징에 대해 설명하시오.
ㄴ CPU(기본 연산 처리 장치), GPU(그래픽 연산 처리 장치), RAM(휘발성 메모리 -> hdd, ssd에 저장)



07. 라이브러리와 프레임워크의 차이에 대해 알고 있는지?
ㄴ 정적 라이브러리(#include), 동적 라이브러리(#pragma ...)
ㄴ 프레임워크
ㄴ 관리의 주체의 차이점이 있다. 라는 것을 얘기하면 됨 (Stdafx, #include)